heat_template_version: 2013-05-23

description: >
  A document-based template to configure your Software Defined Environment.

parameters:
  flavor:
    type: string
    description: Flavor to be used for compute instance
  key_name:
    type: string
    description: Name of key-pair to be used for compute instance
  availability_zone:
    type: string
    description: Name of availability zone in which to create the instance
    default: 'nova'
  private_network:
    type: string
    description: Generated to reference 'private_network' network.
    default: '5177571b-07e3-4cbc-a0eb-1a126c0d1c08'
  ucd_server_url:
    type: string
    description: The server URL for agent communication to UrbanCode Deploy. Do *not* add a trailing slash.
    default: 'http://192.168.27.100:8081'
  ucd_user:
    type: string
    description: The user credential for the UrbanCode Deploy server.
    default: 'PasswordIsAuthToken'
  ucd_password:
    type: string
    description: The user credential for the UrbanCode Deploy server.
    default: '37e1a8e3-67b3-4965-8985-72a93fce7aac'
    hidden: true
  ucd_relay_url:
    type: string
    description: The server URL for an agent relay - leave as 'None' to enable agents to communicate with server directly.
    default: 'None'
  ubuntu-trusty-img:
    type: string
    description: ubuntu-trusty-cloudimg-amd64
    default: '0364c8bb-e4c6-4ac0-8dec-51679a71199a'
  agent_timeout:
    type: string
    description: Generated
    default: '720'
  component_process_timeout:
    type: string
    description: Generated
    default: '720'
  mysql-sg:
    type: string
    description: 40f4cff0-7033-43a1-973c-1ce224dd9c41(mysql-sg)
    default: '40f4cff0-7033-43a1-973c-1ce224dd9c41'
  was-liberty-sg:
    type: string
    description: 8cee7349-48eb-49e8-8718-0741f3fb5607(was-liberty-sg)
  public_subnet_id:
    type: string
    description: Load Balancer Pool Subnet ID
    default: 'TODO'
  load_balancer_protocol_port:
    type: string
    description: Generated for Port to load balancer
    default: '80'
  public_network:
    type: string
    description: Generated for floating IP
    default: 'TODO'

resources:
## REFERENCE {"private":{"type": "OS::Neutron::Net", "properties": {"name": "private", "network_id": "5177571b-07e3-4cbc-a0eb-1a126c0d1c08"}}}

  load_balancer:
    type: OS::Neutron::LoadBalancer
    properties:
      protocol_port: 80
      pool_id: {get_resource: load_balancer_pool}

  load_balancer_floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: load_balancer_floating_ip }
      port_id: { get_attr: [ load_balancer_pool, vip, port_id ] }
      fixed_ip_address: { get_attr: [ load_balancer_pool, vip, address ] }


  load_balancer_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_network }

  load_balancer_pool:
    type: OS::Neutron::Pool
    properties:
      protocol: HTTP
      monitors: [{get_resource: load_balancer_monitor}]
      lb_method: ROUND_ROBIN
      subnet_id: {get_param: public_subnet_id}
      vip:
        protocol_port: 80

  load_balancer_monitor:
    type: OS::Neutron::HealthMonitor
    properties:
      type: TCP
      delay: 5
      max_retries: 5
      timeout: 5

  autoscaling_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 1
      max_size: 3
      resource:
          type: scaled-app-srv.yaml
          properties:
            pool_id: { get_resource: load_balancer_pool }
            load_balancer_protocol_port: { get_param: load_balancer_protocol_port }
            was-liberty-sg: { get_param: was-liberty-sg }
            component_process_timeout: { get_param: component_process_timeout }
            agent_timeout: { get_param: agent_timeout }
            ubuntu-trusty-img: { get_param: ubuntu-trusty-img }
            jke_db_host: { get_attr: [ubuntu-trusty-cloudimg-amd64, first_address] } # IP Address for 'jke-db'   (key: ubuntu-trusty-cloudimg-amd64)s
            ucd_relay_url: { get_param: ucd_relay_url }
            environment_name: { get_attr: [resource_tree, environment_name ] }
            application_name: { get_attr: [resource_tree, application_name ] }
            ucd_password: { get_param: ucd_password }
            ucd_user: { get_param: ucd_user }
            ucd_server_url: { get_param: ucd_server_url }
            metering_query: {"metering.stack": {get_param: "OS::stack_id"}}
            private_network: { get_param: private_network }
            availability_zone: { get_param: availability_zone }
            key_name: { get_param: key_name }
            flavor: { get_param: flavor }


  autoscaling_group_scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: autoscaling_group}
      cooldown: 60
      scaling_adjustment: 1

  autoscaling_group_scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: autoscaling_group}
      cooldown: 60
      scaling_adjustment: -1

  autoscaling_group_scaleup_policy_cpu_alarm_high:
    type: OS::Ceilometer::Alarm
    properties:
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 50
      alarm_actions:
        - {get_attr: [autoscaling_group_scaleup_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: gt

  autoscaling_group_scaledown_policy_cpu_alarm_low:
    type: OS::Ceilometer::Alarm
    properties:
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 15
      alarm_actions:
        - {get_attr: [autoscaling_group_scaledown_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: lt

  ubuntu-trusty-cloudimg-amd64:
    type: OS::Nova::Server
    properties:
      user_data_format: RAW
      user_data: {get_resource: ubuntu-trusty-cloudimg-amd64_mime}
      networks:
          - port: { get_resource: ubuntu-trusty-cloudimg-amd64_private_port  }
      name: jke-db
      image: { get_param: ubuntu-trusty-img }  # ubuntu-trusty-cloudimg-amd64
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      availability_zone: { get_param: availability_zone }


  jke.db:
    depends_on: MySQL_Server
    type: IBM::UrbanCode::SoftwareDeploy::UCD
    properties:
      apply_config: { get_resource: jke.db_sw_config }
      server: ubuntu-trusty-cloudimg-amd64
      version: "LATEST"
      agent_timeout: { get_param: agent_timeout }

  jke.db_sw_config:
    type: IBM::UrbanCode::SoftwareConfig::UCD
    properties:
      name: "jke.db"
      component_process: deploy
      component_process_timeout: { get_param: component_process_timeout }
      ucd_server_url: { get_param: ucd_server_url } # these should come from resource_tree
      ucd_username: { get_param: ucd_user }
      ucd_password: { get_param: ucd_password }
      application: { get_attr: [resource_tree, application_name] }
      environment_name: { get_attr: [resource_tree, environment_name] }
      inputs:

  MySQL_Server:
    type: IBM::UrbanCode::SoftwareDeploy::UCD
    properties:
      apply_config: { get_resource: MySQL_Server_sw_config }
      server: ubuntu-trusty-cloudimg-amd64
      version: "LATEST"
      agent_timeout: { get_param: agent_timeout }  # Generated

  MySQL_Server_sw_config:
    type: IBM::UrbanCode::SoftwareConfig::UCD
    properties:
      name: "MySQL Server"
      component_process: deploy
      component_process_timeout: "300"
      ucd_server_url: { get_param: ucd_server_url } # these should come from resource_tree
      ucd_username: { get_param: ucd_user }
      ucd_password: { get_param: ucd_password }
      application: { get_attr: [resource_tree, application_name] }
      environment_name: { get_attr: [resource_tree, environment_name] }
      inputs:

  ubuntu-trusty-cloudimg-amd64_mime:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: {get_resource: ucd_agent_install}

  ubuntu-trusty-cloudimg-amd64_private_port:
    type: OS::Neutron::Port
    properties:
      security_groups:
          - { get_param: mysql-sg }  # 40f4cff0-7033-43a1-973c-1ce224dd9c41(mysql-sg)
      network_id: { get_param: private_network }

  resource_tree:
    type: IBM::UrbanCode::ResourceTree
    properties:
       urbancode_deploy_url: { get_param: ucd_server_url }
       username: { get_param: ucd_user }
       password: { get_param: ucd_password }
       team_mappings:
       application: JKE
       base_resource_group:

  ucd_agent_install:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: |
            #!/usr/bin/env bash
            arch=`uname -ms | awk '{print tolower($0)}' | tr " " "-" `
            agent_archive=ibm-ucd-agent-$arch.tgz
            if [ "_ucd_relay_url_" != "None" ]; then
              proxy_args="--proxy _ucd_relay_url_:20080"
              ucd_remote_host=_ucd_relay_url_
              agent_args="-r -d"
            else
              proxy_args=
              agent_args=
              ucd_remote_host=_ucd_server_url_
            fi
            curl $proxy_args -Lk -o /tmp/$agent_archive -u _ucd_user_:_ucd_password_ "_ucd_server_url_/cli/version/downloadArtifacts?component=ucd-agent-$arch&version=_agent_version_&singleFilePath=$agent_archive"
            tar xfz /tmp/$agent_archive -C /tmp
            /tmp/ibm-ucd-agent-install/install-agent-with-options.sh -t "_agent_team_" -s $ucd_remote_host $agent_args -x start -n _agent_name_
          params:
            _agent_name_:
               str_replace:
                  template: |
                    "_application_name_._environment_name_"
                  params:
                    _application_name_: { get_attr: [resource_tree, application_name ] }
                    _environment_name_: { get_param: "OS::stack_name" }
            _ucd_server_url_: { get_param: ucd_server_url }
            _ucd_relay_url_: { get_param: ucd_relay_url }
            _ucd_user_ : { get_param: ucd_user }
            _ucd_password_ : { get_param: ucd_password }
            _agent_version_ : 7.1
            _agent_team_ :

outputs:
  blueprint_url:
    description: Blueprint Origin URL
    value:  http://192.168.27.100:8080/landscaper/view/projects?open=demo_00000000_0000_0000_0000_000000000012-OrionContent/default/autoscale-two-node-jke/autoscale-two-node-jke.yml
