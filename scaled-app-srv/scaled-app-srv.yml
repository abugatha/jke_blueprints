## NESTED ##
heat_template_version: 2013-05-23

description: >
  A document-based template to configure your Software Defined Environment.

parameters:
  flavor:
    type: string
    description: Flavor to be used for compute instance
  key_name:
    type: string
    description: Name of key-pair to be used for compute instance
  availability_zone:
    type: string
    description: Name of availability zone in which to create the instance
  private_network:
    type: string
    description: Generated to reference 'private_network' network.
  metering_query:
    type: json
    description: The metering query to associate samples with the alarm
  ucd_server_url:
    type: string
    description: The server URL for agent communication to UrbanCode Deploy. Do *not* add a trailing slash.
  ucd_user:
    type: string
    description: The user credential for the UrbanCode Deploy server.
  ucd_password:
    type: string
    description: The user credential for the UrbanCode Deploy server.
    hidden: true
  application_name:
    type: string
    description: Generated
  environment_name:
    type: string
    description: Generated
  ucd_relay_url:
    type: string
    description: The server URL for an agent relay - leave as 'None' to enable agents to communicate with server directly.
  jke_db_host:
    type: string
    description: Generated
  ubuntu-trusty-img:
    type: string
    description: ubuntu-trusty-cloudimg-amd64
  agent_timeout:
    type: string
    description: Generated
    default: '720'
  component_process_timeout:
    type: string
    description: Generated
    default: '720'
  was-liberty-sg:
    type: string
    description: 8cee7349-48eb-49e8-8718-0741f3fb5607(was-liberty-sg)
  load_balancer_protocol_port:
    type: string
    description: Generated for Port to load balancer
  pool_id:
    type: string
    description: Generated to reference pool
resources:
  ubuntu-trusty-cloudimg-amd641:
      type: OS::Nova::Server
      properties:
        user_data_format: RAW
        user_data: {get_resource: ubuntu-trusty-cloudimg-amd64_mime}
        networks:
            - port: { get_resource: ubuntu-trusty-cloudimg-amd641_private_port  }
        name: jke-app-srv
        image: { get_param: ubuntu-trusty-img }  # ubuntu-trusty-cloudimg-amd64
        flavor: { get_param: flavor }
        key_name: { get_param: key_name }
        availability_zone: { get_param: availability_zone }
        metadata: {get_param: metering_query}


  ubuntu-trusty-cloudimg-amd641_pool_member:
    type: OS::Neutron::PoolMember
    properties:
      address: { get_attr: [ubuntu-trusty-cloudimg-amd641, first_address] }
      pool_id: { get_param: pool_id }
      protocol_port: { get_param: load_balancer_protocol_port }

  jke.war:
    depends_on: WebSphere_Liberty_Profile
    type: IBM::UrbanCode::SoftwareDeploy::UCD
    properties:
      apply_config: { get_resource: jke.war_sw_config }
      server: ubuntu-trusty-cloudimg-amd641
      version: "LATEST"
      agent_timeout: { get_param: agent_timeout }

  jke.war_sw_config:
    type: IBM::UrbanCode::SoftwareConfig::UCD
    properties:
      name: "jke.war"
      component_process: deploy
      component_process_timeout: { get_param: component_process_timeout }  # Generated
      ucd_server_url: { get_param: ucd_server_url } # these should come from resource_tree
      ucd_username: { get_param: ucd_user }
      ucd_password: { get_param: ucd_password }
      application: { get_param: application_name }
      environment_name: { get_param: environment_name }
      inputs:
        JKE_DB_HOST: { get_param: jke_db_host }

  WebSphere_Liberty_Profile:
    type: IBM::UrbanCode::SoftwareDeploy::UCD
    properties:
      apply_config: { get_resource: WebSphere_Liberty_Profile_sw_config }
      server: ubuntu-trusty-cloudimg-amd641
      version: "LATEST"
      agent_timeout: { get_param: agent_timeout }  # Generated

  WebSphere_Liberty_Profile_sw_config:
    type: IBM::UrbanCode::SoftwareConfig::UCD
    properties:
      name: "WebSphere Liberty Profile"
      component_process: deploy
      component_process_timeout: { get_param: component_process_timeout }
      ucd_server_url: { get_param: ucd_server_url } # these should come from resource_tree
      ucd_username: { get_param: ucd_user }
      ucd_password: { get_param: ucd_password }
      application: { get_param: application_name }
      environment_name: { get_param: environment_name }
      inputs:

  ubuntu-trusty-cloudimg-amd64_mime:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: {get_resource: ucd_agent_install}

  ubuntu-trusty-cloudimg-amd641_private_port:
    type: OS::Neutron::Port
    properties:
      security_groups:
          - { get_param: was-liberty-sg }  # 8cee7349-48eb-49e8-8718-0741f3fb5607(was-liberty-sg)
      network_id: { get_param: private_network }

  ucd_agent_install:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: |
            #!/usr/bin/env bash
            arch=`uname -ms | awk '{print tolower($0)}' | tr " " "-" `
            agent_archive=ibm-ucd-agent-$arch.tgz
            if [ "_ucd_relay_url_" != "None" ]; then
              proxy_args="--proxy _ucd_relay_url_:20080"
              ucd_remote_host=_ucd_relay_url_
              agent_args="-r -d"
            else
              proxy_args=
              agent_args=
              ucd_remote_host=_ucd_server_url_
            fi
            curl $proxy_args -Lk -o /tmp/$agent_archive -u _ucd_user_:_ucd_password_ "_ucd_server_url_/cli/version/downloadArtifacts?component=ucd-agent-$arch&version=_agent_version_&singleFilePath=$agent_archive"
            tar xfz /tmp/$agent_archive -C /tmp
            /tmp/ibm-ucd-agent-install/install-agent-with-options.sh -t "_agent_team_" -s $ucd_remote_host $agent_args -x start -n _agent_name_
          params:
            _agent_name_:
               str_replace:
                  template: |
                    "_application_name_._environment_name_"
                  params:
                    _application_name_: { get_param: application_name }
                    _environment_name_: { get_param: "OS::stack_name" }
            _ucd_server_url_: { get_param: ucd_server_url }
            _ucd_relay_url_: { get_param: ucd_relay_url }
            _ucd_user_ : { get_param: ucd_user }
            _ucd_password_ : { get_param: ucd_password }
            _agent_version_ : 7.1
            _agent_team_ :

outputs:
  blueprint_url:
    description: Blueprint Origin URL
    value:  http://192.168.27.100:8080/landscaper/view/projects?open=demo_00000000_0000_0000_0000_000000000012-OrionContent/default/scaled-app-srv/scaled-app-srv.yml
